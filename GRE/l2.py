from math import comb

print('--------------------------- 1 ---------------------------')
# Задача:
# Прибор, установленный на борту самолета, может работать в двух режимах: в
# условиях нормального крейсерского полета и в условиях перегрузки при взлете и
# посадке. Крейсерский режим полета составляет 80% всего времени поле#та, условия
# перегрузки – 20%. Вероятность выхода прибора из строя за время полета в
# нормальном режиме равна 0,1, в условиях перегрузки – 0,4. Найти вероятность того,
# что прибор не откажет в течение всего поле#та.

# Вероятности режимов работы (в процентах, но переводим в дроби):
P_normal = 0.8  # Режим нормального полета (80%)
P_overload = 0.2  # Режим перегрузки (20%)

# Вероятности отказа прибора в каждом режиме:
P_fail_normal = 0.1  # Отказ в нормальном режиме (10%)
P_fail_overload = 0.4  # Отказ в режиме перегрузки (40%)

# Вероятности того, что прибор НЕ откажет в каждом режиме:
P_no_fail_normal = 1 - P_fail_normal  # 1 - 0.1 = 0.9
P_no_fail_overload = 1 - P_fail_overload  # 1 - 0.4 = 0.6

# Формула полной вероятности для события "прибор не откажет":
# P(нет отказа) = P(нормальный режим) * P(нет отказа | нормальный режим) +
#                 + P(режим перегрузки) * P(нет отказа | режим перегрузки)

P_no_fail_total = (P_normal * P_no_fail_normal) + (P_overload * P_no_fail_overload)

# Расчёт по формуле:
# P_no_fail_total = (0.8 * 0.9) + (0.2 * 0.6)
#                 = 0.72 + 0.12
#                 = 0.84

print(f"Вероятность того, что прибор не откажет в течение всего полета: {P_no_fail_total:.2f}")

print('--------------------------- 2 ---------------------------')

# Задача:
# Из 20 акционерных обществ (АО) четыре являются банкротами. Гражданин
# приобрел по одной акции шести АО. Какова вероятность того, что среди купленных
# акций две окажутся акциями банкротов?

# Общие данные:
N = 20  # Всего АО
M = 4   # Банкроты
n = 6   # Количество купленных акций
k = 2   # Желаемое количество банкротов среди купленных акций

# Формула гипергеометрического распределения:
# P(X = k) = C(M, k) * C(N - M, n - k) / C(N, n)

# Вычисляем сочетания:
C_M_k = comb(M, k)  # C(4, 2) = 6
C_N_minus_M_n_minus_k = comb(N - M, n - k)  # C(16, 4) = 1820
C_N_n = comb(N, n)  # C(20, 6) = 38760

# Вычисляем вероятность:
P_X_equals_2 = (C_M_k * C_N_minus_M_n_minus_k) / C_N_n

# Расчёт по формуле:
# P(X = 2) = (C(4, 2) * C(16, 4)) / C(20, 6)
#          = (6 * 1820) / 38760
#          = 10920 / 38760
#          ≈ 0.2817

print(f"Вероятность того, что среди купленных акций две окажутся акциями банкротов: {P_X_equals_2:.4f}")

print('--------------------------- 3 ---------------------------')
# Задача:
# На полке находится 10 книг, расставленных в произвольном порядке. Из них три
# книги по теории вероятностей, три — по математическому анализу и четыре — по
# линейной алгебре. Студент случайным образом достает одну книгу. Какова
# вероятность того, что он возьмет книгу по теории вероятностей или по линейной
# алгебре?
# Общее количество книг
N = 10
# Количество книг по теории вероятностей
P_books = 3
# Количество книг по линейной алгебре
L_books = 4

# Вероятность взять книгу по теории вероятностей: 3 / 10
P_P_books = P_books / N

# Вероятность взять книгу по линейной алгебре: 4 / 10
P_L_books = L_books / N

# Суммарная вероятность (теория вероятностей ИЛИ линейная алгебра): 3/10 + 4/10
P_total = P_P_books + P_L_books

print(f"Вероятность взять книгу по теории вероятностей или по линейной алгебре: {P_total:.2f}")

print('--------------------------- 4 ---------------------------')
# Задача:
# При подозрении на наличие некоторого заболевания пациента отправляют на
# ПЦР-тест. Если заболевание есть, то тест подтверждает его в 86% случаев. Если нет,
# то тест выявляет отсутствие заболевания в среднем в 94% случаев.

# Известно, что в среднем тест оказывается положительным у 10% пациентов,
# направленных на тестирование. При обследовании некоторого пациента врач
# направил его на ПЦР-тест, который оказался положительным. Какова вероятность
# того, что пациент действительно имеет это заболевание?

# Вероятность того, что тест положительный при наличии заболевания (чувствительность теста)
P_positive_given_disease = 0.86

# Вероятность того, что тест отрицательный при отсутствии заболевания (специфичность теста)
P_negative_given_no_disease = 0.94

# Общая вероятность положительного теста среди всех пациентов
P_positive = 0.10

# Вероятность того, что тест положительный при отсутствии заболевания
P_positive_given_no_disease = 1 - P_negative_given_no_disease  # P(положительный тест | здоровье) = 1 - P(отрицательный тест | здоровье)

# Априорная вероятность заболевания
# Используем формулу полной вероятности для нахождения P(заболевание):
# P(положительный тест) = P(положительный тест | заболевание) * P(заболевание) +
#                         P(положительный тест | здоровье) * P(здоровье)

# Пусть P(заболевание) = x, тогда P(здоровье) = 1 - x
# Решаем уравнение: P(положительный тест) = 0.10
from sympy import symbols, Eq, solve

x = symbols('x')  # P(заболевание)
equation = Eq(P_positive_given_disease * x + P_positive_given_no_disease * (1 - x), P_positive)
solution = solve(equation, x)[0]  # Находим P(заболевание)

P_disease = solution  # Вероятность заболевания
P_no_disease = 1 - P_disease  # Вероятность здоровья

# Формула Байеса для нахождения P(заболевание | положительный тест)
P_disease_given_positive = (P_positive_given_disease * P_disease) / P_positive

# Вывод результатов
print(f"Вероятность того, что пациент действительно имеет заболевание: {P_disease_given_positive:.4f}")

print('--------------------------- 5 ---------------------------')
# Задача:
# По линии связи могут быть переданы символы А,В,С. Вероятность передачи
# символа А 0,3, символа В - 0,2, символа С -0,5. Вероятности искажения при передаче
# символов А,В,С соответственно равны 0,04, 0,01, 0,07. Установлено, что сигнал из
# двух символов принят без искажения. Чему равна вероятность, что передавался
# сигнал АВ.
# Вероятности передачи символов
P_A = 0.3
P_B = 0.2
P_C = 0.5

# Вероятности искажения при передаче символов
P_distort_given_A = 0.04
P_distort_given_B = 0.01
P_distort_given_C = 0.07

# Вероятности корректной передачи символов
P_correct_given_A = 1 - P_distort_given_A  # 1 - 0.04 = 0.96
P_correct_given_B = 1 - P_distort_given_B  # 1 - 0.01 = 0.99
P_correct_given_C = 1 - P_distort_given_C  # 1 - 0.07 = 0.93

# Вероятность корректной передачи любого символа
P_correct_A = P_A * P_correct_given_A  # 0.3 * 0.96
P_correct_B = P_B * P_correct_given_B  # 0.2 * 0.99
P_correct_C = P_C * P_correct_given_C  # 0.5 * 0.93

# Общая вероятность корректной передачи одного символа
P_correct_one_symbol = P_correct_A + P_correct_B + P_correct_C  # Сумма всех корректных передач

# Вероятность корректной передачи двух символов (считаем, что символы независимы)
P_correct_two_symbols = P_correct_one_symbol ** 2  # Правильная передача двух символов

# Вероятность того, что передавался сигнал АВ при условии корректной передачи
# Используем формулу Байеса:
# P(AB | корректно) = P(корректно | AB) * P(AB) / P(корректно)
# P(корректно | AB) = P(корректно | A) * P(корректно | B) = 0.96 * 0.99
P_correct_given_AB = P_correct_given_A * P_correct_given_B  # 0.96 * 0.99

# A priori вероятность передачи AB
P_AB = P_A * P_B  # 0.3 * 0.2

# Формула Байеса
P_AB_given_correct = (P_correct_given_AB * P_AB) / P_correct_two_symbols

print(f"Вероятность, что передавался сигнал АВ: {P_AB_given_correct:.4f}")

print('--------------------------- 6 ---------------------------')
# Задача:
# В магазине три холодильника в которых заканчивается мороженое. В первом 4
# белых и 6 шоколадных, во втором 2 белых и 8 шоколадных, в третьем - 3 белых и 7
# шоколадных. Одно мороженое выбрано наугад. найти вероятность того, что оно
# белое.

# Вероятности выбора каждого холодильника одинаковы, так как не указано иное
P_refrigerator = 1 / 3  # Вероятность выбора любого холодильника

# Состав мороженого в каждом холодильнике
white_in_1 = 4  # Белых в первом холодильнике
choco_in_1 = 6  # Шоколадных в первом холодильнике
total_in_1 = white_in_1 + choco_in_1  # Всего в первом холодильнике

white_in_2 = 2  # Белых во втором холодильнике
choco_in_2 = 8  # Шоколадных во втором холодильнике
total_in_2 = white_in_2 + choco_in_2  # Всего во втором холодильнике

white_in_3 = 3  # Белых в третьем холодильнике
choco_in_3 = 7  # Шоколадных в третьем холодильнике
total_in_3 = white_in_3 + choco_in_3  # Всего в третьем холодильнике

# Вероятности выбрать белое мороженое из каждого холодильника
P_white_given_1 = white_in_1 / total_in_1  # 4 / 10
P_white_given_2 = white_in_2 / total_in_2  # 2 / 10
P_white_given_3 = white_in_3 / total_in_3  # 3 / 10

# Полная вероятность выбрать белое мороженое (формула полной вероятности)
P_white = P_refrigerator * P_white_given_1 + P_refrigerator * P_white_given_2 + P_refrigerator * P_white_given_3

print(f"Вероятность того, что выбранное мороженое белое: {P_white:.4f}")

print('--------------------------- 7 ---------------------------')
# Задача:
# В офисе 4 ноутбука изготовленных компанией А, 6 - компанией В, 8 - компанией С
# и 2 - компанией Д. Гарантии, что ноутбуки будут работать без ремонта в течение
# гарантийного срока составляют 70%, 80%, 85 и 55% соответственно. Один ноутбук
# вышел из строя. Найти вероятность того, что он изготовлен компанией Д.

# Количество ноутбуков каждой компании
count_A = 4
count_B = 6
count_C = 8
count_D = 2

# Общее количество ноутбуков
total_laptops = count_A + count_B + count_C + count_D

# Вероятности работоспособности ноутбуков каждой компании
P_work_A = 0.70
P_work_B = 0.80
P_work_C = 0.85
P_work_D = 0.55

# Вероятности того, что ноутбук выйдет из строя для каждой компании
P_fail_A = 1 - P_work_A  # 1 - 0.70 = 0.30
P_fail_B = 1 - P_work_B  # 1 - 0.80 = 0.20
P_fail_C = 1 - P_work_C  # 1 - 0.85 = 0.15
P_fail_D = 1 - P_work_D  # 1 - 0.55 = 0.45

# Вероятности выбора ноутбука каждой компании
P_select_A = count_A / total_laptops  # 4 / 20
P_select_B = count_B / total_laptops  # 6 / 20
P_select_C = count_C / total_laptops  # 8 / 20
P_select_D = count_D / total_laptops  # 2 / 20

# Общая вероятность выхода ноутбука из строя (формула полной вероятности)
# P_fail = (4/20 * 0.30) + (6/20 * 0.20) + (8/20 * 0.15) + (2/20 * 0.45)
P_fail = (P_select_A * P_fail_A) + (P_select_B * P_fail_B) + \
         (P_select_C * P_fail_C) + (P_select_D * P_fail_D)

# Вероятность того, что вышедший из строя ноутбук изготовлен компанией Д (формула Байеса)
# P(D | выход из строя) = (2/20 * 0.45) / 0.22499999999999998
P_D_given_fail = (P_select_D * P_fail_D) / P_fail

print(f"Вероятность того, что вышедший из строя ноутбук изготовлен компанией Д: {P_D_given_fail:.4f}")

print('---------------------------------------------------------')
