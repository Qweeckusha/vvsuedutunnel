from scipy.special import comb

print(f"Вариант 3 \nЗадание 1")
# Брошена игральная кость. Найти вероятность того, что выпадет чётное число очков.
# На игральной кости 6 граней. Половина из них с чётным количеством точек.
total = 6
even = 3
p = 3/6
print(f"Вероятность выпадения чётного количества очков: {p}")

print(f"Задание 2")
# В партии готовой продукции из 20 лампочек 5 повышенного качества.
# В выборку берут 7 лампочек. Какова вероятность того, что 3 лампочки в выборке будут повышенного качества?

N = 20
K = 5
n = 7
k = 3

# Вычисляем вероятность
# Формула гипергеометрического распределения
p = (comb(K, k) * comb(N - K, n - k)) / comb(N, n)

# Выводим результат
print(f"Вероятность того, что в выборке из {n} лампочек будет {k} лампочки повышенного качества: {p:.4f}")

print(f"Задание 3")
# Вероятность одного попадания в цель при одном залпе из двух орудий равна 0,38.
# Найти вероятность поражения цели при одном выстреле первым из орудий, если известно,
# что для второго орудия эта вероятность равна 0,8 (с точностью до 0,1).

Weapon2_p = 0.8
WeaponBoth_p = 0.38

Weapon1_p = Weapon2_p / WeaponBoth_p
print(f"Вероятность попадания первым орудием {Weapon1_p:.4f}")

print(f"Задание 4")
# Радиолампа может принадлежать к одной из трёх партий с вероятностями 0,25, 0,5, 0.25.
# Вероятность того, что лампа проработает заданное число часов для этих партий соответственно равна 0,1; 0,2; 0,4.
# Определить вероятность того, что взятая наудачу лампа проработает заданное число часов.

p1 = 0.25
p2 = 0.5
p3 = 0.25
p1_work_p = 0.1
p2_work_p = 0.2
p3_work_p = 0.4

# Используем формулу полной вероятности
work_p = (p1 * p1_work_p) + (p2 * p2_work_p) + (p3 * p3_work_p)

print(f"Вероятность того, что случайно выбранная лампа проработает заданное число часов: {work_p}")

print(f"Задание 5")
# Два стрелка произвели по одному выстрелу.
# Вероятность попадания в мишень первым стрелком равна 0.7, вторым - 0.6.
# Найти вероятность того, что хотя бы один из стрелков попал в мишень.

shooter1_p = 0.7
shooter2_p = 0.6

# Используем формулу полной вероятности
hit_p = (shooter1_p * (1 - shooter1_p)) + (shooter1_p * shooter2_p) + (shooter2_p * (1 - shooter2_p))
print(f"Вероятность попадания хотя бы одним стрелком: {hit_p}")